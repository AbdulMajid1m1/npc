generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model users {
  id                                    String                                  @id @default(cuid())
  user_type                             String?                                 @db.VarChar(20)
  slug                                  String?                                 @db.NVarChar(Max)
  location_uk                           String?                                 @db.NVarChar(Max)
  have_cr                               String?                                 @db.NVarChar(Max)
  cr_documentID                         String?                                 @db.NVarChar(100)
  document_number                       String?                                 @db.NVarChar(Max)
  fname                                 String?                                 @db.NVarChar(Max)
  lname                                 String?                                 @db.NVarChar(Max)
  email                                 String?                                 @db.NVarChar(Max)
  mobile                                String?                                 @db.NVarChar(Max)
  image                                 String?                                 @db.NVarChar(Max)
  po_box                                String?                                 @db.NVarChar(Max)
  mbl_extension                         String?                                 @db.NVarChar(Max)
  website                               String?                                 @db.NVarChar(Max)
  no_of_staff                           String?                                 @db.NVarChar(Max)
  companyID                             String?                                 @db.NVarChar(Max)
  district                              String?                                 @db.NVarChar(Max)
  building_no                           String?                                 @db.NVarChar(Max)
  additional_number                     String?                                 @db.NVarChar(Max)
  other_landline                        String?                                 @db.NVarChar(Max)
  unit_number                           String?                                 @db.NVarChar(Max)
  qr_corde                              String?                                 @db.NVarChar(Max)
  email_verified_at                     DateTime?                               @db.DateTime
  password                              String?                                 @db.NVarChar(Max)
  verification_code                     Int?
  cr_number                             String?                                 @db.NVarChar(Max)
  cr_activity                           String?                                 @db.NVarChar(Max)
  company_name_eng                      String?                                 @db.NVarChar(Max)
  company_name_arabic                   String?                                 @db.NVarChar(Max)
  bussiness_activity                    String?                                 @db.NVarChar(Max)
  member_category                       String?                                 @db.NVarChar(50)
  other_products                        String?                                 @db.NVarChar(Max)
  gpc                                   String?                                 @db.NVarChar(Max)
  product_addons                        String?                                 @db.NVarChar(Max)
  total                                 Float?
  contactPerson                         String?                                 @db.NVarChar(Max)
  companyLandLine                       String?                                 @db.NVarChar(Max)
  documents                             String?                                 @db.NVarChar(Max)
  address_image                         String?                                 @db.NVarChar(Max)
  status                                String?                                 @default("inactive", map: "DF_users_status") @db.VarChar(10)
  payment_type                          String?                                 @db.NVarChar(Max)
  payment_status                        Int?                                    @default(0, map: "DF_users_payment_status")
  online_payment                        String?                                 @db.NVarChar(Max)
  remember_token                        String?                                 @db.NVarChar(Max)
  parent_memberID                       String?                                 @default("0", map: "DF_parent_member_id")
  invoice_file                          String?                                 @db.NVarChar(Max)
  otp_status                            Int?
  transaction_id                        String?
  created_at                            DateTime                                @default(now())
  updated_at                            DateTime                                @updatedAt
  gcpGLNID                              String?                                 @db.VarChar(50)
  gln                                   String?                                 @db.NVarChar(50)
  gcp_type                              String?                                 @db.VarChar(50)
  deleted_at                            DateTime?                               @db.DateTime
  gcp_expiry                            DateTime?                               @db.DateTime
  memberID                              String?                                 @db.NVarChar(Max)
  user_id                               String?                                 @db.NVarChar(Max)
  remarks                               String?                                 @default("for_review", map: "DF_users_remarks") @db.NVarChar(Max)
  assign_to                             String?
  membership_category                   String?                                 @db.NVarChar(50)
  upgradation_disc                      Int?                                    @default(0, map: "DF_users_upgradation_disc")
  upgradation_disc_amount               Float?                                  @default(0, map: "DF_users_upgradation_disc_amount")
  renewal_disc                          Int?                                    @default(0, map: "DF_users_renewal_disc")
  renewal_disc_amount                   Float?                                  @default(0, map: "DF_users_renewal_disc_amount")
  membership_otherCategory              String?                                 @db.NVarChar(50)
  activityID                            Int?                                    @default(0, map: "DF_users_activityID")
  registration_type                     String?                                 @db.NChar(10)
  city                                  String?                                 @db.NVarChar(Max)
  country                               String?                                 @db.NVarChar(Max)
  state                                 String?                                 @db.NVarChar(Max)
  zip_code                              String?                                 @db.VarChar(50)
  old_member_recheck                    Int?                                    @default(0, map: "DF_users_old_member_recheck")
  is_login                              Int?                                    @default(0, map: "DF_users_is_login")
  membership_category_id                String?
  industryTypes                         String?                                 @db.NVarChar(Max)
  isproductApproved                     Int?                                    @default(0, map: "DF_users_isproductApproved")
  pending_invoices                      String                                  @default("for_review", map: "DF_users_for_approval") @db.VarChar(50)
  member_type                           String?                                 @db.NVarChar(Max)
  lastReminderSentDateForExpired        DateTime?                               @db.DateTime
  lastNotificationSentDateForExpiring   DateTime?                               @db.DateTime
  gps_location                          String?                                 @db.NVarChar(Max)
  longitude                             String?                                 @db.NVarChar(Max)
  latitude                              String?                                 @db.NVarChar(Max)
  gepirPosted                           Int?                                    @default(0, map: "DF_users_gepirPosted")
  api_key                               String?
  admin_history_logs                    admin_history_logs[]
  carts                                 carts[]
  foreign_gtins                         foreign_gtins[]
  gtin_subcriptions                     gtin_subcriptions[]
  gtin_subscription_histories           gtin_subscription_histories[]
  member_documents                      member_documents[]
  member_history_logs                   member_history_logs[]
  other_products_subcriptions           other_products_subcriptions[]
  other_products_subscription_histories other_products_subscription_histories[]
  products                              products[]
  skipped_barcodes                      skipped_barcodes[]
  skipped_GLN_barcodes                  skipped_GLN_barcodes[]
  assign_to_admin                       admins?                                 @relation(fields: [assign_to], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([assign_to], map: "users_assign_to_index")
  @@index([parent_memberID], map: "users_parent_memberID_index")
}

model npcUsers {
  id         String   @id @default(cuid())
  username   String?
  email      String?
  password   String?  @db.NVarChar(Max)
  user_type  String
  image      String?  @db.NVarChar(Max)
  mobile     String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([email], map: "npcUsers_email_index")
}

model admins {
  id                                    String                                  @id @default(cuid())
  username                              String?                                 @db.NVarChar(Max)
  email                                 String?                                 @db.NVarChar(Max)
  password                              String?                                 @db.NVarChar(Max)
  image                                 String?                                 @db.NVarChar(Max)
  mobile                                String?                                 @db.NVarChar(Max)
  status                                Int                                     @default(1, map: "DF__admins__status__0F624AF8") @db.TinyInt
  is_super_admin                        Int                                     @default(0, map: "DF__super_admins__status__0F624AF8") @db.TinyInt
  created_at                            DateTime                                @default(now())
  updated_at                            DateTime                                @updatedAt
  admin_history_logs                    admin_history_logs[]
  roles                                 AdminRole[]
  foreign_gtins                         foreign_gtins[]
  gtin_subscription_histories           gtin_subscription_histories[]
  other_products_subscription_histories other_products_subscription_histories[]
  users                                 users[]
}

model emailsetting {
  id              String   @id @default(cuid())
  emailfrom       String?  @db.NVarChar(Max)
  emailmethod     String?  @db.NVarChar(Max)
  smtp_host       String?  @db.NVarChar(Max)
  smtp_username   String?  @db.NVarChar(Max)
  smtp_password   String?  @db.NVarChar(Max)
  smtp_port       String?  @db.NVarChar(Max)
  smtp_encryption String?  @db.NVarChar(Max)
  status          Int?
  created_at      DateTime @default(now())
  updated_at      DateTime @default(now()) @updatedAt
}

model Role {
  id          String           @id @default(cuid())
  name        String
  admins      AdminRole[]
  permissions RolePermission[]
}

model Permission {
  id    String           @id @default(cuid())
  name  String
  roles RolePermission[]
}

model AdminRole {
  adminId String
  roleId  String
  admin   admins @relation(fields: [adminId], references: [id], onDelete: Cascade)
  role    Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([adminId, roleId])
}

model RolePermission {
  roleId       String
  permissionId String
  permission   Permission @relation(fields: [permissionId], references: [id])
  role         Role       @relation(fields: [roleId], references: [id])

  @@id([roleId, permissionId])
}

model units {
  id         String   @id @default(cuid())
  unit_code  String?  @db.VarChar(50)
  unit_name  String?  @db.NVarChar(50)
  status     Int?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model languages {
  id         String   @id @default(cuid())
  type       String?  @db.NVarChar(Max)
  key        String?  @db.NVarChar(Max)
  value      String?  @db.NVarChar(Max)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model cr_documents {
  id         String    @id @default(cuid())
  name       String?   @db.NVarChar(Max)
  status     Int?
  created_at DateTime? @db.DateTime
  updated_at DateTime? @updatedAt @db.DateTime
}

model product_packagings {
  id         String    @id @default(cuid())
  name       String?   @db.NVarChar(Max)
  status     Int?
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

model other_products {
  id                                    String                                  @id @default(cuid())
  product_name                          String?                                 @db.NVarChar(Max)
  name_ar                               String?                                 @db.NVarChar(Max)
  total_no_of_barcodes                  Float?
  product_subscription_fee              Float?
  code                                  String?                                 @db.NVarChar(Max)
  status                                Int?
  created_at                            DateTime                                @default(now())
  updated_at                            DateTime                                @updatedAt
  med_subscription_fee                  Float?
  variant                               String?                                 @db.NVarChar(10)
  other_products_subcriptions           other_products_subcriptions[]
  other_products_subscription_histories other_products_subscription_histories[]
}

model other_products_subcriptions {
  id                                      String         @id @default(cuid())
  react_no                                Int?
  transaction_id                          String
  product_id                              String
  price                                   Float?
  status                                  String?        @default("inactive", map: "DF_other_products_subcriptions_status") @db.VarChar(10)
  user_id                                 String?
  createdBy                               String?        @db.NVarChar(255)
  created_at                              DateTime       @default(now())
  updated_at                              DateTime       @updatedAt
  deleted_at                              DateTime?      @db.DateTime
  expiry_date                             DateTime?      @db.DateTime
  other_products_subscription_counter     Float          @default(0)
  other_products_subscription_limit       Float          @default(0)
  other_products_subscription_total_price Float          @default(0)
  product_identifier_name                 String?        @db.NVarChar(255)
  isDeleted                               Boolean?       @default(false)
  product                                 other_products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  user                                    users?         @relation(fields: [user_id], references: [id])
}

model other_products_subscription_histories {
  id                String         @id @default(cuid())
  react_no          Int?
  transaction_id    String
  product_id        String
  other_date        DateTime?      @db.DateTime
  user_id           String
  price             Float?
  request_type      String?        @db.NVarChar(Max)
  document          String?        @db.NVarChar(Max)
  payment_type      String?        @db.NVarChar(Max)
  status            String?        @default("pending", map: "DF_other_products_subscription_histories_status") @db.VarChar(255)
  createdBy         String?        @db.NVarChar(255)
  created_at        DateTime?      @default(now())
  updated_at        DateTime?      @updatedAt
  deleted_at        DateTime?      @db.DateTime
  expiry_date       DateTime?      @db.DateTime
  approved_date     DateTime?      @db.DateTime
  admin_id          String?
  additional_gln_id String?
  admin             admins?        @relation(fields: [admin_id], references: [id], onDelete: Cascade)
  product           other_products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  user              users          @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model gtin_products {
  id                             String                        @id @default(cuid())
  member_category_description    String?                       @db.NVarChar(Max)
  total_no_of_barcodes           Int?
  member_registration_fee        Int?
  gtin_yearly_subscription_fee   Int?
  type                           String?                       @db.NVarChar(Max)
  status                         Int?
  gcp_start_range                String?                       @db.VarChar(50)
  quotation                      String?                       @db.NVarChar(Max)
  allow_otherProducts            String?                       @db.NVarChar(Max)
  gcp_type                       String?                       @db.VarChar(50)
  gtin_order                     String?                       @db.NVarChar(50)
  created_at                     DateTime?                     @db.DateTime
  updated_at                     DateTime?                     @db.DateTime
  member_category_description_ar String?                       @db.NVarChar(Max)
  med_registration_fee           Float?
  med_yearly_subscription_fee    Float?
  gtin_subcriptions              gtin_subcriptions[]
  gtin_subscription_histories    gtin_subscription_histories[]
}

model gtin_subcriptions {
  id                            String        @id @default(cuid())
  react_no                      Int?
  transaction_id                String?
  pkg_id                        String
  price                         Float?
  request_type                  String?       @db.NVarChar(Max)
  status                        String?       @default("inactive", map: "DF_gtin_subcriptions_status") @db.VarChar(10)
  user_id                       String?
  createdBy                     String?
  created_at                    DateTime?     @default(now())
  updated_at                    DateTime?     @updatedAt
  deleted_at                    DateTime?     @db.DateTime
  expiry_date                   DateTime?     @db.DateTime
  gtin_subscription_counter     Float         @default(0)
  gtin_subscription_limit       Float         @default(0)
  gtin_subscription_total_price Float         @default(0)
  isDeleted                     Boolean?      @default(false)
  gtin_product                  gtin_products @relation(fields: [pkg_id], references: [id], onDelete: Cascade)
  user                          users?        @relation(fields: [user_id], references: [id])
}

model gtin_subscription_histories {
  id                     String        @id @default(cuid())
  react_no               Int?
  transaction_id         String?
  pkg_id                 String
  pkg_date               DateTime?     @default(now()) @db.DateTime
  user_id                String
  price                  Float?
  request_type           String?       @db.NVarChar(Max)
  document               String?       @db.NVarChar(Max)
  payment_type           String?       @db.NVarChar(Max)
  status                 String?       @default("pending", map: "DF_gtin_subscription_histories_status") @db.VarChar(10)
  createdBy              Int?          @default(0, map: "DF_gtin_subscription_histories_createdBy")
  created_at             DateTime?     @default(now()) @db.DateTime
  updated_at             DateTime?     @updatedAt
  deleted_at             DateTime?     @db.DateTime
  expiry_date            DateTime?     @db.DateTime
  approved_date          DateTime?     @db.DateTime
  admin_id               String?
  additional_products_id String?
  admin                  admins?       @relation(fields: [admin_id], references: [id], onDelete: Cascade)
  gtin_product           gtin_products @relation(fields: [pkg_id], references: [id], onDelete: Cascade)
  user                   users         @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model gcp_types {
  id              String    @id @default(cuid())
  gcp_code        String    @db.NVarChar(255)
  gcp_description String?   @db.NVarChar(Max)
  created_at      DateTime? @db.DateTime
  updated_at      DateTime? @updatedAt @db.DateTime
}

model country_of_sales {
  id                    String   @id @default(cuid())
  Alpha2                String   @db.NVarChar(255)
  Alpha3                String   @db.NVarChar(255)
  country_code_numeric3 String   @db.NVarChar(255)
  country_name          String   @db.NVarChar(255)
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt
}

model hs_codes {
  id            String   @id @default(cuid())
  CNKEY         String   @db.NVarChar(255)
  HSCODES       String   @db.NVarChar(255)
  DescriptionEN String   @db.NVarChar(Max)
  addBy         Int
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model unspscs {
  id         String   @id @default(cuid())
  commodity  Int
  title      String   @db.NVarChar(255)
  definition String   @db.NVarChar(Max)
  addedBy    Int      @db.TinyInt
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model cities {
  id         String   @id @default(cuid())
  name       String?  @db.NVarChar(Max)
  name_ar    String?  @db.NVarChar(Max)
  state_id   String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

model states {
  id         String   @id @default(cuid())
  name       String?  @db.NVarChar(Max)
  name_ar    String?  @db.NVarChar(Max)
  country_id String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

model countries {
  id                String   @id @default(cuid())
  name_en           String?  @db.NVarChar(Max)
  name_ar           String?  @db.NVarChar(Max)
  country_code      String?  @db.NVarChar(Max)
  country_shortName String?  @db.NVarChar(Max)
  status            Int?
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
}

model crs {
  id           String   @id @default(cuid())
  cr           String?  @db.NVarChar(Max)
  activity     String?  @db.NVarChar(Max)
  status       Int?
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now()) @updatedAt
  isRegistered Int      @default(0, map: "DF_crs_isRegistered")
}

model document_type {
  id         String    @id @default(cuid())
  file_name  String?   @db.NVarChar(Max)
  status     Int?
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  deleted_at DateTime? @db.DateTime
}

model member_documents {
  id                  String    @id @default(cuid())
  type                String    @db.NVarChar(255)
  document            String    @db.NVarChar(Max)
  transaction_id      String    @default("0", map: "DF__member_do__trans__01BE3717") @db.NVarChar(255)
  user_id             String
  created_at          DateTime  @default(now())
  updated_at          DateTime  @updatedAt
  deleted_at          DateTime? @db.DateTime
  doc_type            String?   @default("member_document", map: "DF_member_documents_doc_type") @db.VarChar(20)
  status              String?   @default("pending", map: "DF_member_documents_status") @db.VarChar(20)
  reject_reason       String?   @db.VarChar(1000)
  uploaded_by         String?
  no_of_years         Int       @default(1, map: "DF_member_documents_no_of_years")
  cron_job_check_time DateTime  @default(now())
  user                users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model products {
  id                 String    @id @default(cuid())
  user_id            String
  gcpGLNID           String    @db.VarChar(50)
  import_code        String?   @db.VarChar(50)
  productnameenglish String?   @db.NVarChar(Max)
  productnamearabic  String    @db.NVarChar(Max)
  BrandName          String?   @db.NVarChar(255)
  ProductType        String?   @db.VarChar(50)
  Origin             String?   @db.VarChar(50)
  PackagingType      String?   @db.VarChar(50)
  MnfCode            String?   @db.NVarChar(50)
  MnfGLN             String?   @db.NVarChar(50)
  ProvGLN            String?   @db.NVarChar(50)
  unit               String?   @db.VarChar(50)
  size               String?   @db.VarChar(50)
  front_image        String?   @db.VarChar(255)
  back_image         String?   @db.VarChar(255)
  childProduct       String?   @db.VarChar(255)
  quantity           String?   @db.NVarChar(10)
  barcode            String?   @db.NVarChar(50)
  gpc                String?   @db.VarChar(255)
  gpc_code           String?   @db.VarChar(50)
  gpc_type           String?   @default("custom") @db.VarChar(50)
  countrySale        String?   @db.VarChar(50)
  HSCODES            String?   @db.Text
  HsDescription      String?   @db.Text
  gcp_type           String?   @db.VarChar(50)
  prod_lang          String?   @db.VarChar(50)
  details_page       String?   @db.NVarChar(Max)
  details_page_ar    String?   @db.NVarChar(Max)
  status             Int       @default(1, map: "DF__products__status__54968AE5") @db.TinyInt
  deleted_at         DateTime? @db.DateTime
  created_at         DateTime? @default(now()) @db.DateTime
  updated_at         DateTime  @updatedAt @db.DateTime
  memberID           String?   @db.NVarChar(Max)
  admin_id           Int?      @default(0, map: "DF_products_admin_id")
  save_as            String?   @default("final", map: "DF_products_save_as") @db.VarChar(20)
  gtin_type          String?   @default("gtin", map: "DF_products_gtin_type") @db.VarChar(4)
  product_url        String?   @db.VarChar(255)
  product_link_url   String?   @db.VarChar(255)
  product_type       String?   @default("finished_goods", map: "DF_products_prouduct_type") @db.NVarChar(255)
  BrandNameAr        String?   @db.NVarChar(Max)
  digitalInfoType    Int?
  readyForGepir      String?   @default("0", map: "DF_products_readyForGepir") @db.NChar(10)
  gepirPosted        Int?      @default(0, map: "DF_products_gepirPosted") @db.TinyInt
  image_1            String?   @db.VarChar(255)
  image_2            String?   @db.VarChar(255)
  image_3            String?   @db.VarChar(255)
  user               users     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([barcode], map: "products_barcode_index")
}

model add_member_gln_products {
  id                             String    @id @default(cuid())
  product_id                     String?
  reference_id                   String?
  locationNameEn                 String?   @db.NVarChar(Max)
  locationNameAr                 String?   @db.NVarChar(Max)
  AddressEn                      String?   @db.NVarChar(Max)
  AddressAr                      String?   @db.NVarChar(Max)
  pobox                          String?   @db.NVarChar(Max)
  postal_code                    String?   @db.NVarChar(Max)
  country_id                     String?
  state_id                       String?
  city_id                        String?
  licence_no                     String?   @db.NVarChar(Max)
  locationCRNumber               String?   @db.NVarChar(Max)
  office_tel                     String?   @db.NVarChar(Max)
  tel_extension                  String?   @db.NVarChar(Max)
  office_fax                     String?   @db.NVarChar(Max)
  fax_extension                  String?   @db.NVarChar(Max)
  contact1Name                   String?   @db.NVarChar(Max)
  contact1Email                  String?   @db.NVarChar(Max)
  contact1Mobile                 String?   @db.NVarChar(Max)
  contact2Name                   String?   @db.NVarChar(Max)
  contact2Email                  String?   @db.NVarChar(Max)
  contact2Mobile                 String?   @db.NVarChar(Max)
  longitude                      String?   @db.NVarChar(Max)
  latitude                       String?   @db.NVarChar(Max)
  image                          String?   @db.NVarChar(Max)
  GLNBarcodeNumber               String?   @db.NVarChar(Max)
  GLNBarcodeNumber_without_check String?   @db.NVarChar(Max)
  status                         String?
  user_id                        String?
  created_at                     DateTime  @default(now())
  updated_at                     DateTime  @updatedAt
  gcpGLNID                       String?   @db.NChar(20)
  deleted_at                     DateTime? @db.DateTime
  admin_id                       String?   @default("0", map: "DF_add_member_gln_products_admin_id") @db.VarChar(10)
  gln_idenfication               String?
  physical_location              String?
}

model add_member_sscc_products {
  id                              String    @id @default(cuid())
  sscc_type                       String?   @db.NVarChar(Max)
  product_id                      String?
  reference_id                    String?
  VendorID                        String?   @db.NVarChar(Max)
  VendorName                      String?   @db.NVarChar(Max)
  productID                       String?   @db.NVarChar(Max)
  description                     String?   @db.NVarChar(Max)
  SerialNumber                    String?   @db.NVarChar(Max)
  ItemCode                        String?   @db.NVarChar(Max)
  Qty                             String?   @db.NVarChar(Max)
  UseBy                           String?   @db.NVarChar(Max)
  BatchNo                         String?   @db.NVarChar(Max)
  Boxof                           String?   @db.NVarChar(Max)
  hsn_sku                         String?   @db.NVarChar(Max)
  po_no                           String?   @db.NVarChar(Max)
  expiraton_date                  String?   @db.NVarChar(Max)
  ship_to                         String?   @db.NVarChar(Max)
  ship_date                       String?   @db.NVarChar(Max)
  vendor_item_no                  String?   @db.NVarChar(Max)
  short_qty_code                  String?   @db.NVarChar(Max)
  country_id                      String?   @db.NVarChar(Max)
  carton                          String?   @db.NVarChar(Max)
  SSCCBarcodeNumber               String?   @db.NVarChar(Max)
  SSCCBarcodeNumber_without_check String?   @db.NVarChar(Max)
  user_id                         String?
  created_at                      DateTime  @default(now())
  updated_at                      DateTime  @updatedAt
  gcpGLNID                        String?   @db.Char(20)
  deleted_at                      DateTime? @db.DateTime
}

model foreign_gtins {
  id                 String    @id @default(cuid())
  BrandName          String    @db.VarChar(255)
  productnameenglish String    @db.VarChar(255)
  moName             String?   @db.VarChar(255)
  barcode            String    @db.VarChar(50)
  details_page       String?   @db.VarChar(255)
  unit               String?   @db.VarChar(50)
  front_image        String?   @db.NVarChar(255)
  gpc                String?   @db.NVarChar(255)
  gpc_code           String?   @db.NVarChar(255)
  size               String?   @db.NVarChar(255)
  countrySale        String?   @db.NVarChar(255)
  user_id            String?
  admin_id           String?
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt
  deleted_at         DateTime? @db.DateTime
  companyId          String?
  admin              admins?   @relation(fields: [admin_id], references: [id], onDelete: Cascade)
  user               users?    @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model member_history_logs {
  id               String    @id @default(cuid())
  subject          String    @db.NVarChar(255)
  admin_id         String?
  created_at       DateTime? @default(now()) @db.DateTime
  updated_at       DateTime? @updatedAt @db.DateTime
  user_id          String
  created_by_admin Boolean?  @default(false, map: "DF_member_history_logs_created_by_admin")
  rejected_usersId String?
  deleted_at       DateTime? @db.DateTime
  user             users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model admin_history_logs {
  id         String    @id @default(cuid())
  subject    String    @db.NVarChar(255)
  admin_id   String
  created_at DateTime? @default(now()) @db.DateTime
  updated_at DateTime? @updatedAt @db.DateTime
  deleted_at DateTime? @db.DateTime
  user_id    String
  admin      admins    @relation(fields: [admin_id], references: [id], onDelete: Cascade)
  user       users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model skipped_barcodes {
  id         String    @id @default(cuid())
  MemberID   String    @db.NVarChar(255)
  user_id    String
  barcode    String    @db.NVarChar(255)
  deleted_at DateTime? @db.DateTime
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  user       users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model skipped_GLN_barcodes {
  id         String    @id @default(cuid())
  user_id    String
  GLN        String    @db.NVarChar(255)
  deleted_at DateTime? @db.DateTime
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  user       users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model carts {
  id             String    @id @default(cuid())
  transaction_id String?
  cart_items     String?   @db.NVarChar(Max)
  total          Float?
  documents      String?   @db.NVarChar(Max)
  request_type   String?   @db.NVarChar(Max)
  payment_type   String?   @db.NVarChar(Max)
  user_id        String
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  deleted_at     DateTime? @db.DateTime
  reject_reason  String?   @db.Text
  reject_by      Int?
  receipt        String?   @db.Text
  receipt_path   String?   @db.NVarChar(Max)
  admin_id       Int?      @default(0, map: "DF_carts_admin_id")
  assign_to      Int?      @default(0, map: "DF_carts_assign_to")
  discount       Float?    @default(0, map: "DF_carts_discount")
  user           users     @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model NewsletterSubscription {
  id        String   @id @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now())
}

model mega_menus {
  id                   String                 @id @default(cuid())
  name_en              String?                @db.NVarChar(Max)
  name_ar              String?                @db.NVarChar(Max)
  status               Int
  created_at           DateTime?              @default(now()) @db.DateTime
  updated_at           DateTime               @default(now()) @db.DateTime
  mega_menu_categories mega_menu_categories[]
}

model mega_menu_categories {
  id               String         @id @default(cuid())
  parent_id        String
  megamenu_id      String?
  category_name_en String?        @db.NVarChar(Max)
  category_name_ar String?        @db.NVarChar(Max)
  description      String?        @db.NVarChar(Max)
  url              String?        @db.NVarChar(Max)
  meta_title       String?        @db.NVarChar(Max)
  meta_description String?        @db.NVarChar(Max)
  meta_keywords    String?        @db.NVarChar(Max)
  status           Int?
  created_at       DateTime?      @default(now()) @db.DateTime
  updated_at       DateTime       @default(now()) @db.DateTime
  footer_menus     footer_menus[]
  mega_menus       mega_menus?    @relation(fields: [megamenu_id], references: [id])
}

model footer_menus {
  id                  String               @id @default(cuid())
  parent_id           String
  category_name_en    String?              @db.NVarChar(Max)
  category_name_ar    String?              @db.NVarChar(Max)
  url                 String?              @db.NVarChar(Max)
  status              Int?
  created_at          DateTime?            @default(now()) @db.DateTime
  updated_at          DateTime             @default(now()) @db.DateTime
  mega_menu_categorie mega_menu_categories @relation(fields: [parent_id], references: [id])
}

model Template {
  id             String    @id @default(cuid())
  name           String    @db.NVarChar(Max)
  name_ar        String    @db.NVarChar(Max)
  description    String?   @db.NVarChar(Max)
  description_ar String?   @db.NVarChar(Max)
  created_at     DateTime  @default(now()) @db.DateTime
  updated_at     DateTime  @default(now()) @db.DateTime
  pages          NewPage[]
}

model NewPage {
  id                 String    @id @default(cuid())
  name               String?   @db.NVarChar(Max)
  name_ar            String?   @db.NVarChar(Max)
  slug               String?   @unique
  seo_description    String?   @db.NVarChar(Max)
  seo_description_ar String?   @db.NVarChar(Max)
  status             Int?
  template_id        String
  created_at         DateTime? @default(now()) @db.DateTime
  updated_at         DateTime? @default(now()) @db.DateTime
  template           Template  @relation(fields: [template_id], references: [id], onDelete: Cascade)
  sections           Section[]
}

model Section {
  id         String    @id @default(cuid())
  page_id    String
  name       String    @db.NVarChar(Max)
  name_ar    String    @db.NVarChar(Max)
  order      Int
  created_at DateTime  @default(now()) @db.DateTime
  updated_at DateTime  @default(now()) @db.DateTime
  contents   Content[]
  page       NewPage   @relation(fields: [page_id], references: [id], onDelete: Cascade)
}

model Content {
  id         String   @id @default(cuid())
  section_id String
  type       String   @db.NVarChar(Max)
  data       String   @db.NVarChar(Max)
  data_ar    String?  @db.NVarChar(Max)
  created_at DateTime @default(now()) @db.DateTime
  updated_at DateTime @default(now()) @db.DateTime
  section    Section  @relation(fields: [section_id], references: [id], onDelete: Cascade)
}

model featured_services {
  id             String    @id
  name_en        String?   @db.NVarChar(Max)
  name_ar        String?   @db.NVarChar(Max)
  image          String?   @db.NVarChar(Max)
  link           String?   @db.NVarChar(Max)
  status         Int?
  description    String?   @db.NVarChar(Max)
  description_ar String?   @db.NVarChar(Max)
  created_at     DateTime? @db.DateTime
  updated_at     DateTime? @db.DateTime
}

model upcoming_events {
  id             String    @id
  title          String?   @db.NVarChar(Max)
  title_ar       String?   @db.NVarChar(Max)
  image          String?   @db.NVarChar(Max)
  date           String?   @db.NVarChar(255)
  link           String?   @db.NVarChar(Max)
  description    String?   @db.NVarChar(Max)
  description_ar String?   @db.NVarChar(Max)
  status         Int?
  created_at     DateTime? @default(now()) @db.DateTime
  updated_at     DateTime  @default(now()) @db.DateTime
  video          String?   @db.NVarChar(Max)
  display_type   String?   @db.NVarChar(Max)
}

model productStorage {
  id                     String    @id @default(cuid())
  barcode                String    @db.NVarChar(50)
  status                 String    @default("pending", map: "DF_productStorage_status")
  gln                    String    @db.NVarChar(50)
  gln_type               String    @db.VarChar(100)
  quantity               Int
  storage_date           DateTime  @db.Date
  expiration_date        DateTime? @db.Date
  batch_number           String?   @db.VarChar(100)
  temperature_controlled Boolean?
  min_temperature        Decimal?  @db.Decimal(5, 2)
  max_temperature        Decimal?  @db.Decimal(5, 2)
  humidity_controlled    Boolean?
  min_humidity           Decimal?  @db.Decimal(5, 2)
  max_humidity           Decimal?  @db.Decimal(5, 2)
  special_handling       String?   @db.Text
  brand_owner_id         String    @db.VarChar(255)
  created_at             DateTime  @default(now())
  updated_at             DateTime  @updatedAt
  last_modified_by       String    @db.VarChar(255)
}

model tblDlProductContents {
  id                    String   @id @default(cuid())
  status                String   @default("pending", map: "DF_tblDlProductContents_status")
  barcode               String   @db.NVarChar(50)
  ingredient_name       String   @db.VarChar(255)
  ingredient_type       String   @db.VarChar(100)
  quantity              Decimal  @db.Decimal(10, 2)
  unit_of_measure       String   @db.VarChar(50)
  source                String?  @db.VarChar(255)
  organic               Boolean?
  allergen              Boolean?
  gmo_status            String?  @db.VarChar(50)
  nutritional_info      String?  @db.Text
  regulatory_compliance String?  @db.VarChar(255)
  brand_owner_id        String   @db.VarChar(255)
  created_at            DateTime @default(now())
  updated_at            DateTime @updatedAt
  last_modified_by      String   @db.VarChar(255)
}

model tblDlNutritionalInfo {
  id                  String   @id @default(cuid())
  barcode             String   @db.NVarChar(50)
  serving_size        String   @db.VarChar(100)
  calories            Decimal  @db.Decimal(10, 2)
  total_fat           Decimal  @db.Decimal(10, 2)
  saturated_fat       Decimal? @db.Decimal(10, 2)
  trans_fat           Decimal? @db.Decimal(10, 2)
  cholesterol         Decimal? @db.Decimal(10, 2)
  sodium              Decimal  @db.Decimal(10, 2)
  total_carbohydrates Decimal  @db.Decimal(10, 2)
  dietary_fiber       Decimal? @db.Decimal(10, 2)
  sugars              Decimal? @db.Decimal(10, 2)
  protein             Decimal  @db.Decimal(10, 2)
  vitamin_a           Decimal? @db.Decimal(10, 2)
  vitamin_c           Decimal? @db.Decimal(10, 2)
  calcium             Decimal? @db.Decimal(10, 2)
  iron                Decimal? @db.Decimal(10, 2)
  brand_owner_id      String   @db.VarChar(255)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  last_modified_by    String   @db.VarChar(255)
}

model tbDlAllergens {
  id                       String   @id @default(cuid())
  barcode                  String   @db.NVarChar(50)
  allergen_name            String   @db.VarChar(255)
  allergen_type            String   @db.VarChar(100)
  contains_allergen        Boolean
  may_contain              Boolean
  cross_contamination_risk Boolean
  allergen_source          String?  @db.VarChar(255)
  brand_owner_id           String   @db.VarChar(255)
  created_at               DateTime @default(now())
  updated_at               DateTime @updatedAt
  last_modified_by         String   @db.VarChar(255)
}

model tblDlIeceeCertificate {
  id      String @id @default(cuid())
  barcode String @db.NVarChar(50)

  certificate_number String    @db.VarChar(255)
  issue_date         DateTime  @db.Date
  expiry_date        DateTime? @db.Date
  issued_by          String    @db.VarChar(255)
  standard_met       String    @db.VarChar(255)
  status             String    @default("pending", map: "DF_iecee_certificate_status")
  scope              String?   @db.Text
  brand_owner_id     String    @db.VarChar(255)
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt
  last_modified_by   String    @db.VarChar(255)
  images             String?   @db.NVarChar(Max) // New column to store image paths
}

model tblDlEfficiencyLabels {
  id               String    @id @default(cuid())
  status           String    @default("pending", map: "DF_efficiency_labels_status")
  barcode          String    @db.NVarChar(50)
  label_type       String    @db.VarChar(255)
  rating           String    @db.VarChar(50)
  issued_by        String    @db.VarChar(255)
  issue_date       DateTime  @db.Date
  valid_until      DateTime? @db.Date
  scope            String?   @db.VarChar(255)
  details          String?   @db.Text
  brand_owner_id   String    @db.VarChar(255)
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  last_modified_by String    @db.VarChar(255)
  images           String?   @db.NVarChar(Max) // New column to store image paths
}

model tblDlProductConformity {
  id               String    @id @default(cuid())
  barcode          String    @db.NVarChar(50)
  status           String    @default("pending", map: "DF_product_conformity_status")
  certificate_name String    @db.VarChar(255)
  issued_by        String    @db.VarChar(255)
  issue_date       DateTime  @db.Date
  expiry_date      DateTime? @db.Date
  standard_met     String?   @db.VarChar(255)
  details          String?   @db.Text
  brand_owner_id   String    @db.VarChar(255)
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  last_modified_by String    @db.VarChar(255)
  images           String?   @db.NVarChar(Max) // New column to store image paths
}

model tblDlProductQualityMark {
  id                String    @id @default(cuid())
  barcode           String    @db.NVarChar(50)
  quality_mark      String    @db.VarChar(255)
  issuing_authority String    @db.VarChar(255)
  issue_date        DateTime  @db.Date
  expiry_date       DateTime? @db.Date
  status            String    @default("pending", map: "DF_product_quality_mark_status")
  scope             String?   @db.VarChar(255)
  brand_owner_id    String    @db.VarChar(255)
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  images            String?   @db.NVarChar(Max) // New column to store image paths
  last_modified_by  String    @db.VarChar(255)
}

model tblDlFoodProductSafety {
  id                    String    @id @default(cuid())
  barcode               String    @db.NVarChar(50)
  batch_number          String    @db.VarChar(100)
  manufacture_date      DateTime  @db.Date
  expiry_date           DateTime  @db.Date
  supplier_id           Int?
  inspection_date       DateTime? @db.Date
  inspection_result     String?   @db.VarChar(100)
  issue_detected        Boolean?
  issue_description     String?   @db.Text
  corrective_action     String?   @db.Text
  status                String    @default("pending", map: "DF_food_product_safety_status")
  recall_date           DateTime? @db.Date
  regulatory_compliance String?   @db.VarChar(255)
  storage_conditions    String?   @db.VarChar(255)
  brand_owner_id        String    @db.VarChar(255)
  created_at            DateTime  @default(now())
  updated_at            DateTime  @updatedAt
  last_modified_by      String    @db.VarChar(255)
}

model tblDlPackaging {
  id                 String   @id @default(cuid())
  status             String   @default("pending", map: "DF_packaging_status")
  barcode            String   @db.NVarChar(50)
  packaging_type     String   @db.VarChar(100)
  material           String   @db.VarChar(100)
  dimensions         String?  @db.VarChar(100)
  weight             Decimal? @db.Decimal(10, 2)
  capacity           String?  @db.VarChar(100)
  recyclable         Boolean?
  biodegradable      Boolean?
  packaging_supplier String?  @db.VarChar(255)
  cost_per_unit      Decimal? @db.Decimal(10, 2)
  color              String?  @db.VarChar(50)
  labeling           String?  @db.Text
  brand_owner_id     String?  @db.VarChar(255)
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
  last_modified_by   String?  @db.VarChar(255)
}

model tblDlProductStorage {
  id                     String    @id @default(cuid())
  barcode                String    @db.NVarChar(50)
  status                 String    @default("pending", map: "DF_product_storage_status")
  gln                    Int
  gln_type               String    @db.VarChar(100)
  quantity               Int
  storage_date           DateTime  @db.Date
  expiration_date        DateTime? @db.Date
  batch_number           String?   @db.VarChar(100)
  temperature_controlled Boolean?
  min_temperature        Decimal?  @db.Decimal(5, 2)
  max_temperature        Decimal?  @db.Decimal(5, 2)
  humidity_controlled    Boolean?
  min_humidity           Decimal?  @db.Decimal(5, 2)
  max_humidity           Decimal?  @db.Decimal(5, 2)
  special_handling       String?   @db.Text
  brand_owner_id         String    @db.VarChar(255)
  created_at             DateTime  @default(now())
  updated_at             DateTime  @updatedAt
  last_modified_by       String    @db.VarChar(255)
}

model tblWflGtin {
  id               Int      @id @default(autoincrement())
  barcode          String   @db.VarChar(14) // GTIN changed to barcode
  is_vbg_compliant Boolean  @default(false)
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
}

model tblWflDqms {
  id                Int     @id @default(autoincrement())
  barcode           String  @db.VarChar(14) // GTIN changed to barcode
  is_dqms_compliant Boolean @default(false)
  saso              String?
  tuv               String?
  qmark             String?
  iecce             String?
  efficiency        String?
  hdcode            String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model tblWflCompliance {
  id            Int      @id @default(autoincrement())
  barcode       String   @db.VarChar(14) // GTIN changed to barcode
  is_compliance Boolean  @default(false)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
}

model productRequest {
  id                  String   @id @default(cuid())
  brand_owner_user_id String
  npc_user_id         String
  status              String   @default("pending", map: "DF_paymentRequest_status") @db.VarChar(50)
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  barcode             String   @db.NVarChar(50)
}
